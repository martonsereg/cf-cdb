
{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "",
  "Parameters": {

    "KeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "MinLength" : "1",
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
    },

    "AdminPassword" : {
      "Description" : "Admin password for Cloudbreak",
      "Type" : "String",
      "NoEcho": "true",
      "MinLength" : "6",
      "MaxLength" : "30",
      "ConstraintDescription" : "must be at least 6 characters long, and must contain a lowercase letter and a number",
      "AllowedPattern" : "^(?=.*\\d)(?=.*[a-z])(?!.*\\s).{6,30}$"
    }
  },

  "Metadata" : {
      "AWS::CloudFormation::Interface" : {
        "ParameterGroups" : [
          {
            "Label" : { "default" : "Security Configuration" },
            "Parameters" : [ "KeyName", "AdminPassword" ]
          }
        ],
        "ParameterLabels" : {
          "AdminPassword" : { "default" : "Admin Password" },
          "KeyName" : { "default" : "SSH Key Name"}
        }
      }
  },

  "Mappings": {
      "AWSRegionAMI": {
        "us-east-1": { "ami": "ami-4d1e0f27"},
         "us-west-2": { "ami": "ami-7c42b11c"},
         "us-west-1": { "ami": "ami-c4a2dea4"},
         "eu-west-1": { "ami": "ami-303db443"},
         "eu-central-1": { "ami": "ami-cf5cbda0"},
         "ap-southeast-1": { "ami": "ami-a6e237c5"},
         "ap-northeast-1": { "ami": "ami-ee3d2e80"},
         "ap-southeast-2": { "ami": "ami-73517310"},
         "sa-east-1": { "ami": "ami-902ba4fc"}
      }
   },

   "Resources" : {

    "CloudbreakRole": {
         "Type": "AWS::IAM::Role",
         "Properties": {
            "AssumeRolePolicyDocument": {
               "Version" : "2012-10-17",
               "Statement": [ {
                  "Effect": "Allow",
                  "Principal": {
                     "Service": [ "ec2.amazonaws.com" ]
                  },
                  "Action": [ "sts:AssumeRole" ]
               } ]
            },
            "Path": "/",
            "Policies": [ {
               "PolicyName": "root",
               "PolicyDocument": {
                  "Version" : "2012-10-17",
                  "Statement": [ {
                     "Effect": "Allow",
                     "Action": [ "sts:AssumeRole" ],
                     "Resource": "*"
                  } ]
               }
               } ]
            }
      },
      "RootInstanceProfile": {
         "Type": "AWS::IAM::InstanceProfile",
         "Properties": {
            "Path": "/",
            "Roles": [ {
               "Ref": "CloudbreakRole"
            } ]
         }
      },

      "CredentialRole": {
         "Type": "AWS::IAM::Role",
         "Properties": {
            "AssumeRolePolicyDocument": {
               "Version" : "2012-10-17",
               "Statement": [ {
                  "Effect": "Allow",
                  "Principal": {
                     "AWS": { "Fn::Join" : ["", [ "arn:aws:iam::", { "Ref" : "AWS::AccountId" }, ":root" ]] }
                  },
                  "Action": [ "sts:AssumeRole" ],
                  "Condition": {
                    "StringEquals": {
                      "sts:ExternalId": "provision-ambari"
                    }
                  }
               } ]
            },
            "Path": "/",
            "Policies": [ {
               "PolicyName": "root",
               "PolicyDocument": {
                  "Version" : "2012-10-17",
                  "Statement": [ {
                     "Effect": "Allow",
                     "Action": "*",
                     "Resource": "*"
                  } ]
               }
               } ]
            }
      },

    "Cloudbreak": {
      "Type": "AWS::EC2::Instance",
      "DependsOn": "CredentialRole",
      "CreationPolicy": {
        "ResourceSignal": {
        "Count": 1,
        "Timeout": "PT60M"
        }
      },
      "Metadata" : {
      },
      "Properties": {
        "IamInstanceProfile": { "Ref" : "RootInstanceProfile" },
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegionAMI", { "Ref" : "AWS::Region" }, "ami" ] },
        "InstanceType"   : "m4.large",
        "SecurityGroups" : [ {"Ref" : "CloudbreakSecurityGroup"} ],
        "KeyName"        : { "Ref" : "KeyName" },
        "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#!/bin/bash\n",
          "exec > >(tee /var/log/cbd-quick-start.log) 2>&1\n",
          "set -x\n",
          "#cat << COMMENT\n",
          "\n",
          "sed -i 's/^After=network.target docker.socket cloud-final.service waagent.service/After=network.target docker.socket/' /etc/systemd/system/docker.service\n",
          "sed -i '/^Wants/ d' /etc/systemd/system/docker.service\n",
          "systemctl daemon-reload\n",
          "systemctl stop docker\n",
          "systemctl start docker\n",
          "\n",
          "echo wait for docker ...\n",
          "while ! (curl -m 1 -f 127.0.0.1:2376/_ping &>/dev/null); do echo -n .; sleep 1; done\n",
          "\n",
          "export CREDENTIAL_ROLE_ARN=", { "Fn::GetAtt" : [ "CredentialRole" , "Arn" ] }, "\n",
          "cd /var/lib/cloudbreak-deployment\n",
          "cbd init\n",
          "echo 'export UAA_DEFAULT_USER_PW=" , { "Ref" : "AdminPassword" }, "' >> Profile\n",
          "cbd start-wait\n",
          "echo \"credential create --AWS --name aws-access --roleArn $CREDENTIAL_ROLE_ARN --sshKeyUrl http://169.254.169.254/latest/meta-data/public-keys/0/openssh-key\" | cbd util cloudbreak-shell-quiet\n",
          "easy_install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz\n",
          "/usr/bin/cfn-signal -s true -e 0 --resource Cloudbreak",
          " --stack ", {"Ref" : "AWS::StackName"}, " --region ", { "Ref" : "AWS::Region" }, "\n",
          "#COMMENT\n",
          ""

        ]]}}
      }
    },


    "CloudbreakSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable HTTP access via port 80 and SSH access",
        "SecurityGroupIngress" : [
          {"IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0"},
          {"IpProtocol" : "tcp", "FromPort" : "3000", "ToPort" : "3001", "CidrIp" : "0.0.0.0/0"},
          {"IpProtocol" : "tcp", "FromPort" : "8080", "ToPort" : "8080", "CidrIp" : "0.0.0.0/0"},
          {"IpProtocol" : "tcp", "FromPort" : "8089", "ToPort" : "8089", "CidrIp" : "0.0.0.0/0"},
          {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : "0.0.0.0/0"}
        ]
      }
    }
   },

  "Outputs" : {
    "CloudbreakURL" : {
      "Value" : { "Fn::Join" : ["", ["http://", { "Fn::GetAtt" : [ "Cloudbreak", "PublicDnsName" ]}, ":3000/"]] },
      "Description" : "Cloudbreak UI URL"
    },
    "SshAccess" : {
      "Value" : { "Fn::Join" : ["", ["ssh cloudbreak@", { "Fn::GetAtt" : [ "Cloudbreak", "PublicIp" ]} ]] },
      "Description" : "Access the instance via ssh"
    }
  }
}
